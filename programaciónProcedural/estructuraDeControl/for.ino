//ESTRUCTURA DE CICLO FOR
  for( inicializacion; condicion; modificacion por repeticion){
    //CODIGO A REPETIR CICLICAMENTE
  }

//USO COMUN DEL CICLO FOR (ASCENDENTE)
  for( int i = 0; i < 10; i++ ){
    //CODIGO
  }
  //EL CODIGO QUE SE ENCUENTRA DENTRO DEL CICLO FOR, SE EJECUTARÁ 10 VECES.
  //LA VARIABLE LOCAL i TOMARÁ VALORES DE 0 A 9 Y CUANDO SU VALOR SEA 10 LA CONDICION
  //(i<10) SERÁ FALSA POR LO QUE EL CICLO NO SE EJECUTARÁ CON ESE VALOR Y FINALIZARÁ.


//USO COMUN DEL CICLO FOR (DESCENDENTE)
  for( int i = 9; i <= 0; i-- ){
    //CODIGO
  }
  //EL CODIGO QUE SE ENCUENTRA DENTRO DEL CICLO FOR, SE EJECUTARÁ 10 VECES.
  //LA VARIABLE LOCAL i TOMARÁ VALORES DE 9 A 0 Y CUANDO SU VALOR SEA -1 LA CONDICION
  //(i<=0) SERÁ FALSA POR LO QUE EL CICLO NO SE EJECUTARÁ CON ESE VALOR Y FINALIZARÁ.
  //TENGA MUCHO CUIDADO AL TRABAJAR CON UNA VARIABLE LOCAL unsigned YA QUE NUNCA VA A
  //TOMAR VALORES NEGATIVOS Y LA CONDICION (i<=0) JAMAS SERÁ FALSA GENERANDOSE UN
  //BUCLE INFINITO.

//USO DE break
  for( int i = 0; i < 500; i++ ){
    if(miBoton()){
      break;
    }
    //CODIGO
  }
  //LA INSTRUCCION break SE USA PARA FINALIZAR BUCLES, POR LO QUE EN ESTE EJEMPLO SE
  //ESTARÁ EJECUTANDO UN CÓDIGO HASTA QUE LA CONDICION DEL CICLO FOR SEA FALSA O HASTA
  //QUE SE OPRIMA UN BOTON CONFIGURADO EN LA FUNCION miBoton() YA QUE EN ESE CASO, AL
  //PULSARSE SE EJECUTARÁ LA INSTRUCCION break DANDO FIN A LA EJECUCION DEL CICLO FOR
  //EN EL QUE SE ENCUENTRA.


//USO DE continue
  for( int i = 0; i < 500; i++ ){
    if(miBoton()){
      continue;
    }
    //CODIGO
  }
  //LA INSTRUCCION continue OMITE EL RESTO DE LA ITERACIÓN ACTUAL DE UN CICLO
  //( for O while ), CONTINÚA VERIFICANDO LA EXPRESIÓN CONDICIONAL DEL BUCLE Y
  //PROCEDIENDO NUEVAMENTE DESDE EL PRINCIPIO DEL CODIGO QUE CONTIENE EL CICLO EN
  //EJECUCION.
